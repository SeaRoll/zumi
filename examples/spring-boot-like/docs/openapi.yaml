components:
    schemas:
        BookDTO:
            properties:
                description:
                    type: string
                id:
                    description: UUID formatted string
                    format: uuid
                    type: string
                title:
                    type: string
            required:
                - id
                - title
                - description
            type: object
        ErrorResponse:
            properties:
                error:
                    description: Error message
                    type: string
            type: object
        HealthResponseDTO:
            properties:
                status:
                    type: string
            required:
                - status
            type: object
        NewBookDTO:
            properties:
                description:
                    type: string
                title:
                    type: string
            required:
                - title
                - description
            type: object
        PageOfBookDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/BookDTO'
                    type: array
                empty:
                    type: boolean
                first:
                    type: boolean
                last:
                    type: boolean
                number:
                    type: integer
                numberOfElements:
                    type: integer
                pageable:
                    $ref: '#/components/schemas/PageRequest'
                size:
                    type: integer
                totalElements:
                    type: integer
                totalPages:
                    type: integer
            required:
                - content
                - pageable
                - totalElements
                - totalPages
                - number
                - size
                - numberOfElements
                - last
                - first
                - empty
            type: object
        PageRequest:
            properties:
                page:
                    type: integer
                size:
                    type: integer
                sort:
                    items:
                        type: string
                    type: array
            required:
                - page
                - size
                - sort
            type: object
info:
    description: Zumi API for managing books and events
    title: Zumi API
    version: 1.0.0
openapi: 3.0.0
paths:
    /api/v1/books:
        get:
            description: Get all books
            operationId: get_api_v1_books
            parameters:
                - in: query
                  name: page
                  required: true
                  schema:
                    type: integer
                - in: query
                  name: size
                  required: true
                  schema:
                    type: integer
                - in: query
                  name: sort
                  required: true
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageOfBookDTO'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                default:
                    description: ""
            summary: /api/v1/books
            tags:
                - Books
        post:
            description: Add a book
            operationId: post_api_v1_books
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewBookDTO'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BookDTO'
                    description: Created
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                default:
                    description: ""
            summary: /api/v1/books
            tags:
                - Books
    /api/v1/books/{id}:
        delete:
            description: Delete a book
            operationId: delete_api_v1_books_id
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: UUID formatted string
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema: {}
                    description: Accepted
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                default:
                    description: ""
            summary: /api/v1/books/{id}
            tags:
                - Books
        get:
            description: |-
                Get a book by ID

                This handler retrieves a book by its ID from the path parameter.
            operationId: get_api_v1_books_id
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: UUID formatted string
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BookDTO'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                default:
                    description: ""
            summary: /api/v1/books/{id}
            tags:
                - Books
    /api/v1/health:
        get:
            description: Health check endpoint
            operationId: get_api_v1_health
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthResponseDTO'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: Error response
                default:
                    description: ""
            summary: /api/v1/health
            tags:
                - Health
servers:
    - description: Server URL
      url: http://localhost:8080
    - description: Server URL
      url: https://api.example.com
tags:
    - description: Operations related to Books
      name: Books
    - description: Operations related to Health
      name: Health
